{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/oguz/Desktop/ComProSearch/frontend/app/api/run-scraper/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\n\nexport async function POST() {\n  try {\n    const ghRes = await fetch(\n      \"https://api.github.com/repos/oguzyucel1/ComProSearch/actions/workflows/oksid.yml/dispatches\",\n      {\n        method: \"POST\",\n        headers: {\n          Authorization: `token ${process.env.GH_TOKEN}`,\n          Accept: \"application/vnd.github.v3+json\",\n        },\n        body: JSON.stringify({\n          ref: \"main\", // branch adÄ±n neyse onu yaz\n          inputs: {\n            marketplace: \"oksid\",\n            job_id: \"manual_run\", // âœ… required input buraya\n          },\n        }),\n      }\n    );\n\n    if (!ghRes.ok) {\n      const text = await ghRes.text();\n      return NextResponse.json({ message: text }, { status: ghRes.status });\n    }\n\n    return NextResponse.json({ message: \"Scraper workflow triggered ðŸš€\" });\n  } catch (err: any) {\n    return NextResponse.json({ message: err.message }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":";;;;AAAA;;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,QAAQ,MAAM,MAClB,+FACA;YACE,QAAQ;YACR,SAAS;gBACP,eAAe,CAAC,MAAM,EAAE,QAAQ,GAAG,CAAC,QAAQ,EAAE;gBAC9C,QAAQ;YACV;YACA,MAAM,KAAK,SAAS,CAAC;gBACnB,KAAK;gBACL,QAAQ;oBACN,aAAa;oBACb,QAAQ;gBACV;YACF;QACF;QAGF,IAAI,CAAC,MAAM,EAAE,EAAE;YACb,MAAM,OAAO,MAAM,MAAM,IAAI;YAC7B,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAAK,GAAG;gBAAE,QAAQ,MAAM,MAAM;YAAC;QACrE;QAEA,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAgC;IACtE,EAAE,OAAO,KAAU;QACjB,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,SAAS,IAAI,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IACnE;AACF","debugId":null}}]
}