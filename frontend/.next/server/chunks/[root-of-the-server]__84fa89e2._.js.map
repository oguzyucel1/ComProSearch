{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":["file:///Users/oguz/Desktop/ComProSearch/app/api/update/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\nimport { exec } from \"child_process\";\nimport { promisify } from \"util\";\n\nconst execAsync = promisify(exec);\n\nexport async function POST(request: NextRequest) {\n  try {\n    const { store } = await request.json();\n\n    if (!store || ![\"bayinet\", \"oksid\", \"denge\"].includes(store)) {\n      return NextResponse.json(\n        { error: \"Geçersiz mağaza adı\" },\n        { status: 400 }\n      );\n    }\n\n    console.log(`${store} güncelleme script'i başlatılıyor...`);\n\n    // Script dosyalarını çalıştır\n    let scriptCommand = \"\";\n\n    switch (store) {\n      case \"bayinet\":\n        // Bayinet Python script'i için komut\n        scriptCommand = \"python3 scripts/update-bayinet.py\";\n        break;\n      case \"oksid\":\n        // Oksid Python script'i için komut (henüz oluşturulmadı)\n        scriptCommand = \"python3 scripts/update-oksid.py\";\n        break;\n      case \"denge\":\n        // Denge Python script'i için komut (henüz oluşturulmadı)\n        scriptCommand = \"python3 scripts/update-denge.py\";\n        break;\n    }\n\n    try {\n      // Script'i arka planda çalıştır\n      execAsync(scriptCommand)\n        .then(({ stdout, stderr }) => {\n          console.log(`${store} güncelleme tamamlandı:`, stdout);\n          if (stderr) {\n            console.error(`${store} güncelleme uyarıları:`, stderr);\n          }\n        })\n        .catch((error) => {\n          console.error(`${store} güncelleme hatası:`, error);\n        });\n\n      return NextResponse.json({\n        message: `${store} güncelleme başlatıldı`,\n        status: \"started\",\n      });\n    } catch (error) {\n      console.error(`Script çalıştırma hatası:`, error);\n      return NextResponse.json(\n        { error: \"Script çalıştırılamadı\" },\n        { status: 500 }\n      );\n    }\n  } catch (error) {\n    console.error(\"API hatası:\", error);\n    return NextResponse.json({ error: \"Sunucu hatası\" }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEA,MAAM,YAAY,IAAA,8GAAS,EAAC,2HAAI;AAEzB,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,QAAQ,IAAI;QAEpC,IAAI,CAAC,SAAS,CAAC;YAAC;YAAW;YAAS;SAAQ,CAAC,QAAQ,CAAC,QAAQ;YAC5D,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAsB,GAC/B;gBAAE,QAAQ;YAAI;QAElB;QAEA,QAAQ,GAAG,CAAC,GAAG,MAAM,oCAAoC,CAAC;QAE1D,8BAA8B;QAC9B,IAAI,gBAAgB;QAEpB,OAAQ;YACN,KAAK;gBACH,qCAAqC;gBACrC,gBAAgB;gBAChB;YACF,KAAK;gBACH,yDAAyD;gBACzD,gBAAgB;gBAChB;YACF,KAAK;gBACH,yDAAyD;gBACzD,gBAAgB;gBAChB;QACJ;QAEA,IAAI;YACF,gCAAgC;YAChC,UAAU,eACP,IAAI,CAAC,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE;gBACvB,QAAQ,GAAG,CAAC,GAAG,MAAM,uBAAuB,CAAC,EAAE;gBAC/C,IAAI,QAAQ;oBACV,QAAQ,KAAK,CAAC,GAAG,MAAM,sBAAsB,CAAC,EAAE;gBAClD;YACF,GACC,KAAK,CAAC,CAAC;gBACN,QAAQ,KAAK,CAAC,GAAG,MAAM,mBAAmB,CAAC,EAAE;YAC/C;YAEF,OAAO,gJAAY,CAAC,IAAI,CAAC;gBACvB,SAAS,GAAG,MAAM,sBAAsB,CAAC;gBACzC,QAAQ;YACV;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,CAAC,yBAAyB,CAAC,EAAE;YAC3C,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAyB,GAClC;gBAAE,QAAQ;YAAI;QAElB;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,eAAe;QAC7B,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAgB,GAAG;YAAE,QAAQ;QAAI;IACrE;AACF","debugId":null}}]
}