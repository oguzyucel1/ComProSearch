{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/oguz/Desktop/ComProSearch/frontend/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS;IAAG,IAAA,IAAA,OAAA,UAAA,QAAA,AAAG,SAAH,UAAA,OAAA,OAAA,GAAA,OAAA,MAAA;QAAG,OAAH,QAAA,SAAA,CAAA,KAAuB;;IACxC,OAAO,IAAA,yKAAO,EAAC,IAAA,gJAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///Users/oguz/Desktop/ComProSearch/frontend/components/ui/tabs.tsx"],"sourcesContent":["import * as React from \"react\";\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\";\nimport { cn } from \"@/lib/utils\";\n\nconst Tabs = TabsPrimitive.Root;\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-slate-100 p-1 text-slate-500\",\n      className\n    )}\n    {...props}\n  />\n));\nTabsList.displayName = TabsPrimitive.List.displayName;\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-white transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-slate-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-white data-[state=active]:text-slate-950 data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n));\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName;\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-slate-950 focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n));\nTabsContent.displayName = TabsPrimitive.Content.displayName;\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent };\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AACA;AACA;;;;;AAEA,MAAM,OAAO,2KAAkB;AAE/B,MAAM,yBAAW,2KAAgB,MAG/B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,2KAAkB;QACjB,KAAK;QACL,WAAW,IAAA,qHAAE,EACX,2FACA;QAED,GAAG,KAAK;;;;;;;;AAGb,SAAS,WAAW,GAAG,2KAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,8KAAqB;QACpB,KAAK;QACL,WAAW,IAAA,qHAAE,EACX,iYACA;QAED,GAAG,KAAK;;;;;;;;AAGb,YAAY,WAAW,GAAG,8KAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,8KAAqB;QACpB,KAAK;QACL,WAAW,IAAA,qHAAE,EACX,mIACA;QAED,GAAG,KAAK;;;;;;;;AAGb,YAAY,WAAW,GAAG,8KAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":["file:///Users/oguz/Desktop/ComProSearch/frontend/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-white transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-slate-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-slate-900 text-slate-50 hover:bg-slate-900/90\",\n        destructive: \"bg-red-500 text-slate-50 hover:bg-red-500/90\",\n        outline:\n          \"border border-slate-200 bg-white hover:bg-slate-100 hover:text-slate-900\",\n        secondary: \"bg-slate-100 text-slate-900 hover:bg-slate-100/80\",\n        ghost: \"hover:bg-slate-100 hover:text-slate-900\",\n        link: \"text-slate-900 underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, ...props }, ref) => {\n    return (\n      <button\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;;;;;AAEA,MAAM,iBAAiB,IAAA,0KAAG,EACxB,0RACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aAAa;YACb,SACE;YACF,WAAW;YACX,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,2KAAgB,MAC7B,QAAyC;QAAxC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,OAAO;IACrC,qBACE,6LAAC;QACC,WAAW,IAAA,qHAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 166, "column": 0}, "map": {"version":3,"sources":["file:///Users/oguz/Desktop/ComProSearch/frontend/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-gray-600 bg-gradient-to-br from-gray-900 to-gray-800 text-white px-3 py-2 text-sm ring-offset-gray-900 file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-gray-400 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nInput.displayName = \"Input\";\n\nexport { Input };\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAKA,MAAM,sBAAQ,2KAAgB,MAC5B,QAAgC;QAA/B,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO;IAC5B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,IAAA,qHAAE,EACX,sYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 202, "column": 0}, "map": {"version":3,"sources":["file:///Users/oguz/Desktop/ComProSearch/frontend/components/ui/label.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { cn } from \"@/lib/utils\";\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n);\n\nconst Label = React.forwardRef<\n  HTMLLabelElement,\n  React.LabelHTMLAttributes<HTMLLabelElement> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <label ref={ref} className={cn(labelVariants(), className)} {...props} />\n));\nLabel.displayName = \"Label\";\n\nexport { Label };\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;;AAEA,MAAM,gBAAgB,IAAA,0KAAG,EACvB;AAGF,MAAM,sBAAQ,2KAAgB,MAI5B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QAAM,KAAK;QAAK,WAAW,IAAA,qHAAE,EAAC,iBAAiB;QAAa,GAAG,KAAK;;;;;;;;AAEvE,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":["file:///Users/oguz/Desktop/ComProSearch/frontend/components/ui/radio-group.tsx"],"sourcesContent":["import * as React from \"react\";\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\";\nimport { Circle } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  );\n});\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName;\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-gray-600 text-blue-500 ring-offset-gray-900 focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  );\n});\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName;\n\nexport { RadioGroup, RadioGroupItem };\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;;;;;;AAEA,MAAM,2BAAa,2KAAgB,MAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;IACxB,qBACE,6LAAC,qLAAwB;QACvB,WAAW,IAAA,qHAAE,EAAC,cAAc;QAC3B,GAAG,KAAK;QACT,KAAK;;;;;;AAGX;;AACA,WAAW,WAAW,GAAG,qLAAwB,CAAC,WAAW;AAE7D,MAAM,+BAAiB,2KAAgB,OAGrC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;IACxB,qBACE,6LAAC,qLAAwB;QACvB,KAAK;QACL,WAAW,IAAA,qHAAE,EACX,gPACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,0LAA6B;YAAC,WAAU;sBACvC,cAAA,6LAAC,mNAAM;gBAAC,WAAU;;;;;;;;;;;;;;;;AAI1B;;AACA,eAAe,WAAW,GAAG,qLAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 311, "column": 0}, "map": {"version":3,"sources":["file:///Users/oguz/Desktop/ComProSearch/frontend/lib/supabase.ts"],"sourcesContent":["import { createClient } from \"@supabase/supabase-js\";\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\n\n// Bayinet ürün tablosu için tip tanımları\nexport interface BayinetProduct {\n  id: string;\n  name: string;\n  price?: number;\n  category?: string; // Kategori doğrudan ürün tablosunda\n  image_url?: string;\n  description?: string;\n  stock_status?: string;\n  // Bayinet'e özgü diğer alanlar\n}\n\n// Denge ürün tablosu için tip tanımları\nexport interface DengeProduct {\n  id: string;\n  product_name: string; // Farklı alan adı\n  cost?: number; // Farklı alan adı (price yerine)\n  category?: string; // Kategori doğrudan ürün tablosunda\n  image?: string; // Farklı alan adı\n  details?: string; // Farklı alan adı\n  availability?: string; // Farklı alan adı\n  // Denge'ye özgü diğer alanlar\n}\n\n// Oksid tabloları için tip tanımları - Gerçek şema\nexport interface OksidCategory {\n  id: number;\n  name: string;\n  // Oksid için kategori tablosu şeması henüz belirtilmedi\n}\n\nexport interface OksidProduct {\n  id: number; // bigserial\n  name: string | null; // text\n  url: string | null; // text\n  price_1: number | null; // double precision\n  price_2: number | null; // double precision\n  currency: string | null; // text\n  stock: string | null; // text\n  category: string | null; // text (kategori adı doğrudan)\n  created_at: string | null; // timestamp\n}\n\n// Genel tip tanımları (normalize edilmiş)\nexport interface Category {\n  id: string;\n  name: string;\n  store: string;\n}\n\nexport interface Product {\n  id: string;\n  name: string;\n  price?: number;\n  category_id?: string;\n  store: string;\n  image_url?: string;\n  description?: string;\n  stock_status?: string;\n  created_at?: string;\n}\n\n// Tablo isimleri mapping - Sadece ürün tabloları\nexport const TABLE_NAMES = {\n  bayinet: {\n    products: \"bayinet_products\",\n  },\n  denge: {\n    products: \"denge_products\",\n  },\n  oksid: {\n    products: \"oksid_products\", // Gerçek tablo adı\n  },\n} as const;\n\nexport type StoreType = keyof typeof TABLE_NAMES;\n"],"names":[],"mappings":";;;;;;AAEoB;AAFpB;;AAEA,MAAM;AACN,MAAM;AAEC,MAAM,WAAW,IAAA,0MAAY,EAAC,aAAa;AAiE3C,MAAM,cAAc;IACzB,SAAS;QACP,UAAU;IACZ;IACA,OAAO;QACL,UAAU;IACZ;IACA,OAAO;QACL,UAAU;IACZ;AACF","debugId":null}},
    {"offset": {"line": 341, "column": 0}, "map": {"version":3,"sources":["file:///Users/oguz/Desktop/ComProSearch/frontend/lib/database.ts"],"sourcesContent":["import {\n  supabase,\n  Category,\n  Product,\n  TABLE_NAMES,\n  StoreType,\n  BayinetProduct,\n  DengeProduct,\n  OksidProduct,\n} from \"./supabase\";\n\n// Bayinet verilerini normalize et\nfunction normalizeBayinetProduct(item: BayinetProduct): Product {\n  return {\n    id: item.id,\n    name: item.name,\n    price: item.price,\n    category_id: undefined, // Artık category_id yok, category string olarak var\n    store: \"bayinet\",\n    image_url: item.image_url,\n    description: item.description,\n    stock_status: item.stock_status,\n  };\n}\n\n// Denge verilerini normalize et\nfunction normalizeDengeProduct(item: DengeProduct): Product {\n  return {\n    id: item.id,\n    name: item.product_name, // Farklı alan adı\n    price: item.cost, // Farklı alan adı\n    category_id: undefined, // Artık category_id yok, category string olarak var\n    store: \"denge\",\n    image_url: item.image, // Farklı alan adı\n    description: item.details, // Farklı alan adı\n    stock_status: item.availability, // Farklı alan adı\n  };\n}\n\n// Oksid verilerini normalize et - Gerçek şema\nfunction normalizeOksidProduct(item: OksidProduct): Product {\n  return {\n    id: item.id.toString(), // number'dan string'e çevir\n    name: item.name || \"İsimsiz Ürün\", // null olabilir\n    price: item.price_1 || item.price_2 || undefined, // İki fiyat alanından birini kullan\n    category_id: undefined, // category string olarak geliyor, id yok\n    store: \"oksid\",\n    image_url: undefined, // Şemada resim alanı yok\n    description: item.url || undefined, // URL'yi açıklama olarak kullan\n    stock_status: item.stock || undefined,\n    created_at: item.created_at || undefined,\n  };\n}\n\n// Kategorileri ürün tablolarından çek - Her mağaza için\nexport async function getCategoriesByStore(store: string): Promise<Category[]> {\n  try {\n    const storeKey = store.toLowerCase() as StoreType;\n\n    switch (storeKey) {\n      case \"bayinet\":\n        return await getBayinetCategoriesFromProducts();\n      case \"denge\":\n        return await getDengeCategoriesFromProducts();\n      case \"oksid\":\n        return await getOksidCategoriesFromProducts();\n      default:\n        console.error(`Unknown store: ${store}`);\n        return [];\n    }\n  } catch (error) {\n    console.error(\"Error in getCategoriesByStore:\", error);\n    return [];\n  }\n}\n\n// Bayinet için ürünlerden benzersiz kategori listesi çek\nasync function getBayinetCategoriesFromProducts(): Promise<Category[]> {\n  try {\n    const { data, error } = await supabase\n      .from(\"bayinet_products\")\n      .select(\"category\")\n      .not(\"category\", \"is\", null)\n      .order(\"category\");\n\n    if (error) {\n      console.error(\"Error fetching Bayinet categories from products:\", error);\n      return [];\n    }\n\n    if (!data) return [];\n\n    // Benzersiz kategorileri çıkar ve normalize et\n    const uniqueCategories = [...new Set(data.map((item) => item.category))];\n\n    return uniqueCategories\n      .filter((category) => category) // null/undefined'ları filtrele\n      .map((category, index) => ({\n        id: (index + 1).toString(),\n        name: category!,\n        store: \"bayinet\",\n      }));\n  } catch (error) {\n    console.error(\"Error in getBayinetCategoriesFromProducts:\", error);\n    return [];\n  }\n}\n\n// Denge için ürünlerden benzersiz kategori listesi çek\nasync function getDengeCategoriesFromProducts(): Promise<Category[]> {\n  try {\n    const { data, error } = await supabase\n      .from(\"denge_products\")\n      .select(\"category\")\n      .not(\"category\", \"is\", null)\n      .order(\"category\");\n\n    if (error) {\n      console.error(\"Error fetching Denge categories from products:\", error);\n      return [];\n    }\n\n    if (!data) return [];\n\n    // Benzersiz kategorileri çıkar ve normalize et\n    const uniqueCategories = [...new Set(data.map((item) => item.category))];\n\n    return uniqueCategories\n      .filter((category) => category) // null/undefined'ları filtrele\n      .map((category, index) => ({\n        id: (index + 1).toString(),\n        name: category!,\n        store: \"denge\",\n      }));\n  } catch (error) {\n    console.error(\"Error in getDengeCategoriesFromProducts:\", error);\n    return [];\n  }\n}\n\n// Oksid için ürünlerden benzersiz kategori listesi çek\nasync function getOksidCategoriesFromProducts(): Promise<Category[]> {\n  try {\n    // Sayfalama ile tüm kategori verilerini çek\n    // İlk önce distinct kategorileri çekelim - bu performansı artırır\n    const { data: distinctData, error: distinctError } = await supabase.rpc(\n      \"get_distinct_oksid_categories\"\n    );\n\n    // RPC fonksiyonu kullanılabilir değilse (oluşturulmadıysa), tüm verileri çekerek manuel olarak ayrıştıralım\n    if (distinctError || !distinctData) {\n      console.log(\n        \"Distinct RPC fonksiyonu kullanılamıyor, manuel yöntem kullanılıyor...\"\n      );\n\n      // Sayfa sayfa veri çekelim (paginasyon)\n      let allCategories: Array<string> = [];\n      let hasMoreData = true;\n      let offset = 0;\n      const pageSize = 1000;\n\n      while (hasMoreData) {\n        const { data: pageData, error: pageError } = await supabase\n          .from(\"oksid_products\")\n          .select(\"category\")\n          .not(\"category\", \"is\", null)\n          .range(offset, offset + pageSize - 1);\n\n        if (pageError) {\n          console.error(\n            `Error fetching Oksid categories (page ${offset / pageSize + 1}):`,\n            pageError\n          );\n          break;\n        }\n\n        if (!pageData || pageData.length === 0) {\n          hasMoreData = false;\n          break;\n        }\n\n        // Bu sayfadaki kategorileri ekle\n        const pageCategories = pageData.map(\n          (item: { category: string }) => item.category\n        );\n        allCategories = [...allCategories, ...pageCategories];\n\n        // Sonraki sayfa için offset'i güncelle\n        offset += pageSize;\n\n        // Son sayfaya ulaştıysak döngüden çık\n        if (pageData.length < pageSize) {\n          hasMoreData = false;\n        }\n\n        console.log(\n          `Oksid kategorileri sayfa ${offset / pageSize} yüklendi. ${\n            pageData.length\n          } ürün, toplam şu ana kadar: ${allCategories.length}`\n        );\n      }\n\n      // Benzersiz kategorileri çıkar\n      const uniqueCategories = [...new Set(allCategories)]\n        .filter((category: string | null | undefined) => category) // null/undefined'ları filtrele\n        .sort((a: string, b: string) => {\n          // Türkçe karakterleri doğru sıralamak için localeCompare kullan\n          return a.localeCompare(b, \"tr-TR\", {\n            sensitivity: \"base\",\n            numeric: true,\n          });\n        });\n\n      console.log(\n        `Toplam ${uniqueCategories.length} benzersiz Oksid kategorisi bulundu.`\n      );\n\n      return uniqueCategories.map((category: string, index: number) => ({\n        id: (index + 1).toString(),\n        name: category,\n        store: \"oksid\",\n      }));\n    } else {\n      // RPC fonksiyonu başarıyla çalıştı, benzersiz kategorileri dönelim\n      const uniqueCategories = distinctData\n        .filter((category: string | null | undefined) => category) // null/undefined'ları filtrele\n        .sort((a: string, b: string) => {\n          // Türkçe karakterleri doğru sıralamak için localeCompare kullan\n          return a.localeCompare(b, \"tr-TR\", {\n            sensitivity: \"base\",\n            numeric: true,\n          });\n        });\n\n      console.log(\n        `RPC ile ${uniqueCategories.length} benzersiz Oksid kategorisi bulundu.`\n      );\n\n      return uniqueCategories.map((category: string, index: number) => ({\n        id: (index + 1).toString(),\n        name: category,\n        store: \"oksid\",\n      }));\n    }\n  } catch (error) {\n    console.error(\"Error in getOksidCategoriesFromProducts:\", error);\n    return [];\n  }\n}\n\n// Ürünleri isme göre ara\nexport async function searchProductsByName(\n  searchTerm: string,\n  store?: string\n): Promise<Product[]> {\n  try {\n    if (!store) {\n      // Tüm mağazalarda ara\n      const allResults = await Promise.all([\n        searchInStore(searchTerm, \"bayinet\"),\n        searchInStore(searchTerm, \"denge\"),\n        searchInStore(searchTerm, \"oksid\"),\n      ]);\n      return allResults.flat();\n    }\n\n    return await searchInStore(searchTerm, store.toLowerCase() as StoreType);\n  } catch (error) {\n    console.error(\"Error in searchProductsByName:\", error);\n    return [];\n  }\n}\n\n// Belirli bir mağazada arama yap\nasync function searchInStore(\n  searchTerm: string,\n  storeKey: StoreType\n): Promise<Product[]> {\n  try {\n    const tableName = TABLE_NAMES[storeKey]?.products;\n\n    if (!tableName) {\n      console.error(`Unknown store: ${storeKey}`);\n      return [];\n    }\n\n    // Her mağaza için farklı alan adlarıyla arama yap\n    let query;\n    switch (storeKey) {\n      case \"bayinet\":\n        query = supabase\n          .from(tableName)\n          .select(\"*\")\n          .ilike(\"name\", `%${searchTerm}%`)\n          .order(\"name\");\n        break;\n      case \"denge\":\n        query = supabase\n          .from(tableName)\n          .select(\"*\")\n          .ilike(\"product_name\", `%${searchTerm}%`)\n          .order(\"product_name\");\n        break;\n      case \"oksid\":\n        query = supabase\n          .from(tableName)\n          .select(\"*\")\n          .ilike(\"name\", `%${searchTerm}%`) // Gerçek şemada 'name' alanı var\n          .order(\"name\");\n        break;\n      default:\n        return [];\n    }\n\n    const { data, error } = await query;\n\n    if (error) {\n      console.error(`Error searching products in ${storeKey}:`, error);\n      return [];\n    }\n\n    if (!data) return [];\n\n    // Her mağaza için uygun normalize fonksiyonunu kullan\n    switch (storeKey) {\n      case \"bayinet\":\n        return (data as BayinetProduct[]).map(normalizeBayinetProduct);\n      case \"denge\":\n        return (data as DengeProduct[]).map(normalizeDengeProduct);\n      case \"oksid\":\n        return (data as OksidProduct[]).map(normalizeOksidProduct);\n      default:\n        return [];\n    }\n  } catch (error) {\n    console.error(`Error in searchInStore for ${storeKey}:`, error);\n    return [];\n  }\n}\n\n// Ürünleri kategoriye göre getir\nexport async function getProductsByCategory(\n  categoryId: string,\n  store?: string\n): Promise<Product[]> {\n  try {\n    if (!store) {\n      // Tüm mağazalarda ara\n      const allResults = await Promise.all([\n        getProductsByCategoryInStore(categoryId, \"bayinet\"),\n        getProductsByCategoryInStore(categoryId, \"denge\"),\n        getProductsByCategoryInStore(categoryId, \"oksid\"),\n      ]);\n      return allResults.flat();\n    }\n\n    return await getProductsByCategoryInStore(\n      categoryId,\n      store.toLowerCase() as StoreType\n    );\n  } catch (error) {\n    console.error(\"Error in getProductsByCategory:\", error);\n    return [];\n  }\n}\n\n// Belirli bir mağazada kategoriye göre ürün getir\nasync function getProductsByCategoryInStore(\n  categoryId: string,\n  storeKey: StoreType\n): Promise<Product[]> {\n  try {\n    const tableName = TABLE_NAMES[storeKey]?.products;\n\n    if (!tableName) {\n      console.error(`Unknown store: ${storeKey}`);\n      return [];\n    }\n\n    // Her mağaza için kategori adıyla arama yap\n    let query;\n    switch (storeKey) {\n      case \"bayinet\":\n        query = supabase\n          .from(tableName)\n          .select(\"*\")\n          .eq(\"category\", categoryId) // Artık hepsi 'category' alanı kullanıyor\n          .order(\"name\");\n        break;\n      case \"denge\":\n        query = supabase\n          .from(tableName)\n          .select(\"*\")\n          .eq(\"category\", categoryId) // Artık hepsi 'category' alanı kullanıyor\n          .order(\"product_name\");\n        break;\n      case \"oksid\":\n        query = supabase\n          .from(tableName)\n          .select(\"*\")\n          .eq(\"category\", categoryId) // Gerçek şemada 'category' alanı var\n          .order(\"name\");\n        break;\n      default:\n        return [];\n    }\n\n    const { data, error } = await query;\n\n    if (error) {\n      console.error(\n        `Error fetching products by category in ${storeKey}:`,\n        error\n      );\n      return [];\n    }\n\n    if (!data) return [];\n\n    // Her mağaza için uygun normalize fonksiyonunu kullan\n    switch (storeKey) {\n      case \"bayinet\":\n        return (data as BayinetProduct[]).map(normalizeBayinetProduct);\n      case \"denge\":\n        return (data as DengeProduct[]).map(normalizeDengeProduct);\n      case \"oksid\":\n        return (data as OksidProduct[]).map(normalizeOksidProduct);\n      default:\n        return [];\n    }\n  } catch (error) {\n    console.error(\n      `Error in getProductsByCategoryInStore for ${storeKey}:`,\n      error\n    );\n    return [];\n  }\n}\n\n// Tüm mağazalarda ürün karşılaştırması\nexport async function compareProductsAcrossStores(\n  searchTerm: string\n): Promise<Product[]> {\n  try {\n    // Tüm mağazalarda paralel arama yap\n    const allResults = await Promise.all([\n      searchInStore(searchTerm, \"bayinet\"),\n      searchInStore(searchTerm, \"denge\"),\n      searchInStore(searchTerm, \"oksid\"),\n    ]);\n\n    // Sonuçları birleştir ve fiyata göre sırala\n    return allResults.flat().sort((a, b) => {\n      // Önce mağazaya göre sırala, sonra fiyata göre\n      if (a.store !== b.store) {\n        return a.store.localeCompare(b.store);\n      }\n      return (a.price || 0) - (b.price || 0);\n    });\n  } catch (error) {\n    console.error(\"Error in compareProductsAcrossStores:\", error);\n    return [];\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 695, "column": 0}, "map": {"version":3,"sources":["file:///Users/oguz/Desktop/ComProSearch/frontend/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\nimport {\n  getCategoriesByStore,\n  searchProductsByName,\n  getProductsByCategory,\n  compareProductsAcrossStores,\n} from \"@/lib/database\";\nimport { Category, Product } from \"@/lib/supabase\";\n\nexport default function ComproAppUI() {\n  const [activeMethod, setActiveMethod] = useState(\"searchByStore\");\n  const [selectedStore, setSelectedStore] = useState(\"Bayinet\");\n  const [searchMethod, setSearchMethod] = useState(\"searchByName\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n\n  // Supabase state'leri\n  const [categories, setCategories] = useState<Category[]>([]);\n  const [products, setProducts] = useState<Product[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // Kategorileri yükle\n  const loadCategories = async (store: string) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const data = await getCategoriesByStore(store);\n      setCategories(data);\n    } catch (err) {\n      setError(\"Kategoriler yüklenirken hata oluştu\");\n      console.error(\"Error loading categories:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Mağaza değiştiğinde kategorileri yükle\n  useEffect(() => {\n    loadCategories(selectedStore);\n  }, [selectedStore]);\n\n  // Ürün arama fonksiyonu\n  const handleSearch = async () => {\n    if (!searchTerm.trim()) return;\n\n    setLoading(true);\n    setError(null);\n    try {\n      let data: Product[] = [];\n      if (activeMethod === \"compare\") {\n        data = await compareProductsAcrossStores(searchTerm);\n      } else {\n        data = await searchProductsByName(searchTerm, selectedStore);\n      }\n      setProducts(data);\n    } catch (err) {\n      setError(\"Ürünler aranırken hata oluştu\");\n      console.error(\"Error searching products:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Kategori seçimi fonksiyonu\n  const handleCategorySelect = async () => {\n    if (!selectedCategory) return;\n\n    setLoading(true);\n    setError(null);\n    try {\n      // Oksid için kategori adını kullan, diğerleri için ID kullan\n      let categoryIdentifier = selectedCategory;\n      if (selectedStore.toLowerCase() === \"oksid\") {\n        // Oksid için seçilen category value'si zaten kategori adı\n        const selectedCat = categories.find(\n          (cat) => cat.name === selectedCategory\n        );\n        categoryIdentifier = selectedCat ? selectedCat.name : selectedCategory;\n      }\n\n      const data = await getProductsByCategory(\n        categoryIdentifier,\n        selectedStore\n      );\n      setProducts(data);\n    } catch (err) {\n      setError(\"Kategori ürünleri yüklenirken hata oluştu\");\n      console.error(\"Error loading category products:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Güncelleme butonları için fonksiyonlar\n  const handleBayinetUpdate = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"/api/update\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ store: \"bayinet\" }),\n      });\n\n      const result = await response.json();\n\n      if (response.ok) {\n        alert(\"✅ Bayinet güncelleme başlatıldı! Konsolu kontrol edin.\");\n        console.log(\"Bayinet güncelleme:\", result);\n      } else {\n        throw new Error(result.error || \"Güncelleme başlatılamadı\");\n      }\n    } catch (error) {\n      console.error(\"Bayinet güncelleme hatası:\", error);\n      setError(\n        \"Bayinet güncelleme sırasında hata oluştu: \" + (error as Error).message\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleOksidUpdate = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"/api/update\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ store: \"oksid\" }),\n      });\n\n      const result = await response.json();\n\n      if (response.ok) {\n        alert(\"✅ Oksid güncelleme başlatıldı! Konsolu kontrol edin.\");\n        console.log(\"Oksid güncelleme:\", result);\n      } else {\n        throw new Error(result.error || \"Güncelleme başlatılamadı\");\n      }\n    } catch (error) {\n      console.error(\"Oksid güncelleme hatası:\", error);\n      setError(\n        \"Oksid güncelleme sırasında hata oluştu: \" + (error as Error).message\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDengeUpdate = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"/api/update\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ store: \"denge\" }),\n      });\n\n      const result = await response.json();\n\n      if (response.ok) {\n        alert(\"✅ Denge güncelleme başlatıldı! Konsolu kontrol edin.\");\n        console.log(\"Denge güncelleme:\", result);\n      } else {\n        throw new Error(result.error || \"Güncelleme başlatılamadı\");\n      }\n    } catch (error) {\n      console.error(\"Denge güncelleme hatası:\", error);\n      setError(\n        \"Denge güncelleme sırasında hata oluştu: \" + (error as Error).message\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // This would be your dummy data for categories (sadece Oksid dışı için kullanılıyor)\n  const bayinetCategories = [\n    { id: \"01\", name: \"Bilgisayar Bileşenleri\" },\n    { id: \"02\", name: \"Kişisel Bilgisayar\" },\n    { id: \"10\", name: \"Ağ Ürünleri\" },\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-gray-800 to-black p-8\">\n      <div className=\"max-w-6xl mx-auto\">\n        <h1 className=\"text-4xl font-bold text-white mb-8 text-center\">\n          ✨ ComPro Ürün Arama\n        </h1>\n\n        {/* Güncelleme Butonları */}\n        <div className=\"mb-8 p-6 bg-gray-800/50 backdrop-blur-sm rounded-xl shadow-2xl border border-gray-600\">\n          <h2 className=\"text-xl font-semibold text-white mb-4 text-center\">\n            🔄 Veritabanı Güncellemeleri\n          </h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <Button\n              onClick={handleBayinetUpdate}\n              disabled={loading}\n              className=\"bg-red-600 hover:bg-red-700 text-white font-semibold py-3 px-6 rounded-lg transition-colors shadow-lg\"\n            >\n              {loading ? \"⏳ Güncelleniyor...\" : \"🔄 Bayinet Güncelle\"}\n            </Button>\n            <Button\n              onClick={handleOksidUpdate}\n              disabled={loading}\n              className=\"bg-orange-600 hover:bg-orange-700 text-white font-semibold py-3 px-6 rounded-lg transition-colors shadow-lg\"\n            >\n              {loading ? \"⏳ Güncelleniyor...\" : \"🔄 Oksid Güncelle\"}\n            </Button>\n            <Button\n              onClick={handleDengeUpdate}\n              disabled={loading}\n              className=\"bg-gray-900 hover:bg-black text-white font-semibold py-3 px-6 rounded-lg transition-colors shadow-lg border border-gray-600\"\n            >\n              {loading ? \"⏳ Güncelleniyor...\" : \"🔄 Denge Güncelle\"}\n            </Button>\n          </div>\n        </div>\n\n        <Tabs\n          defaultValue=\"searchByStore\"\n          onValueChange={setActiveMethod}\n          className=\"w-full\"\n        >\n          <TabsList className=\"grid w-full grid-cols-2 bg-gray-800/50 border-gray-600 text-white\">\n            <TabsTrigger\n              value=\"searchByStore\"\n              className=\"data-[state=active]:bg-gray-700 data-[state=active]:text-white text-gray-300\"\n            >\n              🔍 Mağazaya Göre Ara\n            </TabsTrigger>\n            <TabsTrigger\n              value=\"compare\"\n              className=\"data-[state=active]:bg-gray-700 data-[state=active]:text-white text-gray-300\"\n            >\n              🆚 Karşılaştır\n            </TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"searchByStore\" className=\"mt-6\">\n            <div className=\"p-6 bg-gray-800/50 backdrop-blur-sm rounded-xl shadow-2xl border border-gray-600\">\n              <h2 className=\"text-xl font-semibold text-white mb-4\">\n                🛒 Mağaza Seçin\n              </h2>\n              <RadioGroup\n                value={selectedStore}\n                onValueChange={setSelectedStore}\n                className=\"flex space-x-4 mb-6\"\n              >\n                <div className=\"flex items-center space-x-2\">\n                  <RadioGroupItem value=\"Bayinet\" id=\"r1\" />\n                  <Label htmlFor=\"r1\" className=\"text-white\">\n                    Bayinet\n                  </Label>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <RadioGroupItem value=\"Denge\" id=\"r2\" />\n                  <Label htmlFor=\"r2\" className=\"text-white\">\n                    Denge\n                  </Label>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <RadioGroupItem value=\"Oksid\" id=\"r3\" />\n                  <Label htmlFor=\"r3\" className=\"text-white\">\n                    Oksid\n                  </Label>\n                </div>\n              </RadioGroup>\n\n              <h2 className=\"text-xl font-semibold text-white mb-4\">\n                Arama Yöntemi\n              </h2>\n              <RadioGroup\n                value={searchMethod}\n                onValueChange={setSearchMethod}\n                className=\"flex space-x-4 mb-6\"\n              >\n                <div className=\"flex items-center space-x-2\">\n                  <RadioGroupItem value=\"searchByName\" id=\"sm1\" />\n                  <Label htmlFor=\"sm1\" className=\"text-white\">\n                    🔍 İsimle Ara\n                  </Label>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <RadioGroupItem value=\"searchByCategory\" id=\"sm2\" />\n                  <Label htmlFor=\"sm2\" className=\"text-white\">\n                    📂 Kategoriye Göre\n                  </Label>\n                </div>\n              </RadioGroup>\n\n              {searchMethod === \"searchByName\" ? (\n                <div>\n                  <Label\n                    htmlFor=\"search-term\"\n                    className=\"block text-white mb-2\"\n                  >\n                    Ürün Adı veya Anahtar Kelime:\n                  </Label>\n                  <Input\n                    id=\"search-term\"\n                    type=\"text\"\n                    placeholder=\"Örn: 'RX 6600' veya 'Lenovo Legion'\"\n                    value={searchTerm}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                      setSearchTerm(e.target.value)\n                    }\n                    className=\"mb-4\"\n                  />\n                  <Button\n                    className=\"w-full\"\n                    onClick={handleSearch}\n                    disabled={loading}\n                  >\n                    {loading ? \"Araniyor...\" : \"Ara\"}\n                  </Button>\n                </div>\n              ) : (\n                <div>\n                  <Label\n                    htmlFor=\"category-select\"\n                    className=\"block text-white mb-2\"\n                  >\n                    Kategori Seçin:\n                  </Label>\n                  <select\n                    id=\"category-select\"\n                    value={selectedCategory}\n                    onChange={(e) => setSelectedCategory(e.target.value)}\n                    className=\"w-full p-2 bg-gray-700 border border-gray-600 text-white rounded-md mb-4 focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    disabled={loading}\n                  >\n                    <option value=\"\">-- Kategori Seçiniz --</option>\n                    {categories.map((cat) => (\n                      <option\n                        key={cat.id}\n                        value={\n                          selectedStore.toLowerCase() === \"oksid\"\n                            ? cat.name\n                            : cat.id\n                        }\n                      >\n                        {cat.name}\n                      </option>\n                    ))}\n                  </select>\n                  <Button\n                    className=\"w-full\"\n                    onClick={handleCategorySelect}\n                    disabled={loading || !selectedCategory}\n                  >\n                    {loading ? \"Yükleniyor...\" : \"Listele\"}\n                  </Button>\n                </div>\n              )}\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"compare\" className=\"mt-6\">\n            <div className=\"p-6 bg-gray-800/50 backdrop-blur-sm rounded-xl shadow-2xl border border-gray-600\">\n              <h2 className=\"text-xl font-semibold text-white mb-4\">\n                🆚 Ürün Karşılaştır\n              </h2>\n              <Label htmlFor=\"compare-term\" className=\"block text-white mb-2\">\n                Karşılaştırılacak Ürün Adı:\n              </Label>\n              <Input\n                id=\"compare-term\"\n                type=\"text\"\n                placeholder=\"Örn: 'RTX 3060'\"\n                value={searchTerm}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                  setSearchTerm(e.target.value)\n                }\n                className=\"mb-4\"\n              />\n              <Button\n                className=\"w-full\"\n                onClick={handleSearch}\n                disabled={loading}\n              >\n                {loading ? \"Karşılaştırılıyor...\" : \"Karşılaştır\"}\n              </Button>\n            </div>\n          </TabsContent>\n        </Tabs>\n\n        {/* Hata mesajları */}\n        {error && (\n          <div className=\"mt-6 p-4 bg-red-900/80 border border-red-600 text-red-200 rounded-lg backdrop-blur-sm\">\n            ❌ {error}\n          </div>\n        )}\n\n        {/* Ürün sonuçları */}\n        {products.length > 0 && (\n          <div className=\"mt-6 p-6 bg-gray-800/50 backdrop-blur-sm rounded-xl shadow-2xl border border-gray-600\">\n            <h3 className=\"text-xl font-semibold text-white mb-4\">\n              📦 Bulunan Ürünler ({products.length})\n            </h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n              {products.map((product) => (\n                <div\n                  key={product.id}\n                  className=\"border border-gray-600 bg-gray-700/50 rounded-lg p-4 hover:shadow-xl hover:bg-gray-600/50 transition-all duration-300\"\n                >\n                  {product.image_url && (\n                    <img\n                      src={product.image_url}\n                      alt={product.name}\n                      className=\"w-full h-32 object-cover rounded-md mb-3\"\n                    />\n                  )}\n                  <h4 className=\"font-semibold text-white mb-2 line-clamp-2\">\n                    {product.name}\n                  </h4>\n                  <div className=\"text-sm text-gray-300 space-y-1\">\n                    <p>\n                      🏪{\" \"}\n                      <span className=\"font-medium text-white\">\n                        {product.store}\n                      </span>\n                    </p>\n                    {product.price && (\n                      <p>\n                        💰{\" \"}\n                        <span className=\"font-bold text-green-400\">\n                          {product.price.toLocaleString(\"tr-TR\")} ₺\n                        </span>\n                      </p>\n                    )}\n                    {product.stock_status && (\n                      <p>\n                        📦{\" \"}\n                        <span\n                          className={\n                            product.stock_status === \"in_stock\"\n                              ? \"text-green-400\"\n                              : \"text-red-400\"\n                          }\n                        >\n                          {product.stock_status === \"in_stock\"\n                            ? \"Stokta\"\n                            : \"Stok Yok\"}\n                        </span>\n                      </p>\n                    )}\n                  </div>\n                  {product.description && (\n                    <p className=\"text-xs text-gray-400 mt-2 line-clamp-2\">\n                      {product.description}\n                    </p>\n                  )}\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Loading durumunda boş sonuç mesajı */}\n        {!loading && products.length === 0 && searchTerm && (\n          <div className=\"mt-6 p-4 bg-yellow-900/80 border border-yellow-600 text-yellow-200 rounded-lg text-center backdrop-blur-sm\">\n            🔍 \"{searchTerm}\" için ürün bulunamadı\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}